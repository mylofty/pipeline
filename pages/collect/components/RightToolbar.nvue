<template>
	<view class="right-toolbar">
		<!-- 搜索框 -->
		<view class="search-container">
			<uni-search-bar 
				v-model="searchText" 
				placeholder="搜索数据..." 
				@input="onSearchInput"
				@confirm="onSearchConfirm"
				class="search-bar"
			/>
		</view>
		
		<!-- 筛选按钮组 -->
		<view class="filter-buttons">
			<view 
				v-for="(filter, index) in filters" 
				:key="index"
				:class="['filter-btn', { active: activeFilter === filter.value }]"
				@click="onFilterClick(filter.value)"
			>
				<text class="filter-text">{{ filter.label }}</text>
			</view>
		</view>
		
		<!-- 排序选项 -->
		<view class="sort-container">
			<text class="sort-label">排序方式：</text>
			<picker 
				:value="sortIndex" 
				:range="sortOptions" 
				range-key="label"
				@change="onSortChange"
				class="sort-picker"
			>
				<view class="picker-text">
					<text>{{ sortOptions[sortIndex].label }}</text>
					<uni-icons type="arrowdown" size="14" color="#666"></uni-icons>
				</view>
			</picker>
		</view>
		
		<!-- 操作按钮 -->
		<view class="action-buttons">
			<view class="action-btn primary" @click="onAddData">
				<uni-icons type="plus" size="16" color="#fff"></uni-icons>
				<text class="btn-text">新增数据</text>
			</view>
			<view class="action-btn secondary" @click="onExportData">
				<uni-icons type="download" size="16" color="#007AFF"></uni-icons>
				<text class="btn-text">导出数据</text>
			</view>
			<view class="action-btn secondary" @click="onRefreshData">
				<uni-icons type="refresh" size="16" color="#007AFF"></uni-icons>
				<text class="btn-text">刷新</text>
			</view>
		</view>
	</view>
</template>

<script>
export default {
	name: 'RightToolbar',
	props: {
		searchValue: {
			type: String,
			default: ''
		},
		activeFilter: {
			type: String,
			default: 'all'
		},
		sortValue: {
			type: String,
			default: 'time_desc'
		}
	},
	data() {
		return {
			searchText: this.searchValue,
			filters: [
				{ label: '全部', value: 'all' },
				{ label: '今日', value: 'today' },
				{ label: '本周', value: 'week' },
				{ label: '本月', value: 'month' }
			],
			sortOptions: [
				{ label: '时间降序', value: 'time_desc' },
				{ label: '时间升序', value: 'time_asc' },
				{ label: '名称A-Z', value: 'name_asc' },
				{ label: '名称Z-A', value: 'name_desc' }
			],
			sortIndex: 0
		}
	},
	watch: {
		searchValue(newVal) {
			this.searchText = newVal;
		},
		sortValue(newVal) {
			const index = this.sortOptions.findIndex(item => item.value === newVal);
			this.sortIndex = index >= 0 ? index : 0;
		}
	},
	methods: {
		onSearchInput(value) {
			this.searchText = value;
			this.$emit('search-input', value);
		},
		onSearchConfirm() {
			this.$emit('search-confirm', this.searchText);
		},
		onFilterClick(filterValue) {
			this.$emit('filter-change', filterValue);
		},
		onSortChange(e) {
			const index = e.detail.value;
			this.sortIndex = index;
			const sortValue = this.sortOptions[index].value;
			this.$emit('sort-change', sortValue);
		},
		onAddData() {
			this.$emit('add-data');
		},
		onExportData() {
			this.$emit('export-data');
		},
		onRefreshData() {
			this.$emit('refresh-data');
		}
	}
}
</script>

<style scoped>
@import './toolbar-styles.css';
</style>